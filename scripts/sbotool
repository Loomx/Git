#!/bin/sh
#
# sbotool - tool to install, upgrade and search slackbuilds.org packages

Workdir=/tmp/sbotool
Cachefile=/var/cache/SLACKBUILDS.TXT
Arch=$(uname -m)
Release=$(cut -d" " -f2 /etc/slackware-version)

[ $UID -eq 0 ] || exit 1
mkdir -p $Workdir

usage () {
	cat <<EOF
sbotool - tool to install, upgrade and search slackbuilds.org packages
Usage:
	sbotool update | upgrade-all
	sbottol search PACKAGE 
	sbotool install PACKAGE [...]
	sbotool upgrade PACKAGE [...]
EOF
exit 2
}

update () {
	wget -N https://slackbuilds.org/slackbuilds/$Release/SLACKBUILDS.TXT \
		-P /var/cache || exit 3
	printf "SLACKBUILDS.TXT up to date\n\n"
}

search () {
	[ -r $Cachefile ] || update
	grep -F -e "NAME" -e "SHORT DESCRIPTION" $Cachefile | grep -i "$1"
}

install () {
	while [ "$1" ]; do
		(
		cd $Workdir
		rm -rf $Workdir/"$1"
		Section=$(grep /"$1"$ $Cachefile | cut -d/ -f2)
		wget https://slackbuilds.org/slackbuilds/$Release/$Section/"$1".tar.gz
		tar xf "$1".tar.gz
		rm "$1".tar.gz
		cd "$1" || exit 4
		. ./"$1".info
		if [ "$REQUIRES" ]; then
			read -p "$1 depends on: $REQUIRES
			Install dependencies? Or (e)dit dependency list (y/n/e) "
			printf "\n"
			[ "$REPLY" = n ] && exit 5
			printf "%s\n" "$REQUIRES" >$Workdir/deps
			printf "\n====================" >>$Workdir/deps
			printf "\nCurrently installed:\n\n" >>$Workdir/deps
			ls /var/log/packages | grep -F SBo \
				| rev | cut -d- -f3- | rev >>$Workdir/deps
			[ "$REPLY" = e ] && ${EDITOR:-vi} $Workdir/deps
			install $(head -n1 $Workdir/deps)
			rm -rf $Workdir/deps
		fi
		if [ "$Arch" = x86_64 ]; then
			wget $DOWNLOAD_x86_64 || wget $DOWNLOAD || exit 6
		else
			wget $DOWNLOAD || exit 6
		fi
		sh ./"$1".SlackBuild || exit 7
		upgradepkg --install-new /tmp/"$1"-$VERSION*.t?z || exit 8
		rm -f /tmp/"$1"-$VERSION*.t?z
		cd ..
		rm -rf $Workdir/"$1"
		) || exit $(echo $?)
		shift
	done
}

upgrade_all () {
	rm -f $Workdir/upgrades
	ls -rt /var/log/packages | grep -F SBo | rev | cut -d- -f3- | \
	while read -r Pkg; do
		Name=$(echo $Pkg | cut -d- -f2- | rev)
		Ver=$(echo $Pkg | cut -d- -f1 | rev)
		grep -A2 /$Name$ $Cachefile | grep -q $Ver$ || {
			New=$(grep -A2 /$Name$ $Cachefile | grep VERSION | cut -d" " -f3)
			printf "%-20s  Installed: %-10s  Available: %-10s\n" $Name $Ver $New
			printf "%s " $Name >>$Workdir/upgrades
		}
	done
	[ -r $Workdir/upgrades ] || {
		printf "Nothing to update\n\n"; exit 0
	}
	printf "\n"
	read -p "Install upgrades? Or (e)dit upgrade list (y/n/e) "
	printf "\n"
	[ "$REPLY" = n ] && exit 9
	[ "$REPLY" = e ] && ${EDITOR:-vi} $Workdir/upgrades
	install $(cat $Workdir/upgrades)
	rm -f $Workdir/upgrades
}

case "$1" in
	update)
		update
		;;
	install | upgrade)
		shift
		install "$@"
		;;
	upgrade-all)
		upgrade_all
		;;
	search)
		search "$2"
		;;
	*)
		usage
		;;
esac

exit 0
